% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_multiverse_specifications.R
\name{create_multiverse_specifications}
\alias{create_multiverse_specifications}
\title{Create Specifications for Multiverse Meta-Analysis}
\usage{
create_multiverse_specifications(data, wf_vars, ma_methods, dependencies)
}
\arguments{
\item{data}{A data frame containing the dataset to base the specifications on.}

\item{wf_vars}{A character vector specifying the "Which factors" (e.g., columns like `wf_1`, `wf_2`) to include in the specifications.}

\item{ma_methods}{A character vector specifying the meta-analytic methods to consider (e.g., `"reml"`, `"fe"`, `"3-level"`, `"rve"`, `"p-uniform"`, etc.).}

\item{dependencies}{A character vector specifying dependency handling strategies to include (e.g., `"modeled"`, `"aggregate"``).}
}
\value{
A list with two elements:
\itemize{
  \item \code{specifications}: A data frame containing the grid of valid specifications.
  \item \code{number_specs}: The total number of valid specifications.
}
}
\description{
This function generates a grid of specifications for multiverse meta-analysis based on "Which" and "How" factors.
It ensures only valid combinations of meta-analytic methods and dependency handling strategies are included.
}
\details{
The function performs the following steps:
\itemize{
  \item Identifies all unique values for each "Which factor" in the dataset.
  \item Appends a "total" value (e.g., `total_wf_1`) to each "Which factor" to allow for combinations that include all levels.
  \item Dynamically creates a grid of all possible combinations of "Which factors," meta-analytic methods (`ma_methods`), and dependency strategies (`dependencies`).
  \item Filters out invalid combinations based on logical constraints (e.g., some methods only work with specific dependencies).
  \item Adds a unique row ID to each specification.
}
}
\examples{
# Example dataset
example_data <- data.frame(
  wf_1 = c("A", "B", "C"),
  wf_2 = c("X", "Y", "Z")
)

# Define parameters
wf_vars <- c("wf_1", "wf_2")
ma_methods <- c("reml", "fe", "3-level", "rve")
dependencies <- c("modeled", "aggregate")

# Create specifications
specs <- create_multiverse_specifications(
  data = example_data,
  wf_vars = wf_vars,
  ma_methods = ma_methods,
  dependencies = dependencies
)

# View results
head(specs$specifications)
print(specs$number_specs)

}
